{"version":3,"sources":["components/Input/index.jsx","components/MainInput/index.jsx","components/ItemList/index.jsx","components/App/index.jsx","index.js"],"names":["Input","props","changeHandler","event","target","value","setState","input","handler","method","handlerName","name","argument","state","editing","this","console","log","handlerArgument","idx","forceUpdate","Fragment","className","type","id","placeholder","autoComplete","onChange","onClick","Component","MainInput","listDeleteHandler","mainHandler","addHandler","inputHandler","ItemList","item","isDone","checkbox","tasks","filter","task","length","alert","push","doneHandler","deleteHandler","editHandler","editHelperMethod","checkHandler","positionHandler","direction","temp","mode","map","style","color","backgroundColor","checked","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4344f9e0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nclass Input extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handler = props.method;\r\n    this.handlerName = props.name;\r\n    this.target = props.argument;\r\n\r\n    this.state = {\r\n      editing: false,\r\n      input: \"\",\r\n    };\r\n  }\r\n\r\n  changeHandler = (event) => {\r\n    if (event.target.value != \"\")\r\n      this.setState(() => ({ input: event.target.value }));\r\n    else this.setState(() => ({ input: \"\" }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.target == \"\") {\r\n      console.log(\"bruh\");\r\n      this.handlerArgument = this.state.input;\r\n    } else {\r\n      this.setState((state) => {\r\n        state.editing = true;\r\n        state.input = this.target.input;\r\n        this.handlerArgument = { idx: this.target.idx, input: state.input };\r\n      });\r\n\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.editing) {\r\n      this.setState((state) => {\r\n        this.handlerArgument = { idx: this.target.idx, input: state.input };\r\n      });\r\n    } else {\r\n      this.handlerArgument = this.state.input;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"Input\">\r\n          <textarea\r\n            type=\"textArea\"\r\n            name=\"input\"\r\n            id=\"input\"\r\n            placeholder=\"Add a todo item...\"\r\n            autoComplete=\"Off\"\r\n            onChange={this.changeHandler}\r\n            value={this.state.input}\r\n          />\r\n          <button onClick={() => this.handler(this.handlerArgument)}>\r\n            {this.handlerName}\r\n          </button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"../Input\";\r\nimport \"./styles.scss\";\r\n\r\nclass MainInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.listDeleteHandler = props.mainHandler;\r\n    this.addHandler = props.inputHandler;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"listButtons\">\r\n          <button onClick={() => this.listDeleteHandler(\"all\")}>\r\n            Delete All\r\n          </button>\r\n          <button onClick={() => this.listDeleteHandler(\"checked\")}>\r\n            Delete Checked\r\n          </button>\r\n          <button onClick={() => this.listDeleteHandler(\"done\")}>\r\n            Delete Done\r\n          </button>\r\n        </div>\r\n\r\n        <Input method={this.addHandler} argument={\"\"} name={\"Add Task\"} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainInput;\r\n","import React, { Component } from \"react\";\r\nimport { AiFillCaretUp, AiFillCaretDown } from \"react-icons/ai\";\r\nimport \"./styles.scss\";\r\nimport MainInput from \"../MainInput/index\";\r\nimport Input from \"../Input\";\r\n\r\nclass ItemList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editing: false,\r\n      target: { idx: null, input: null },\r\n      tasks: [\r\n        { name: \"test task 1\", isDone: false, checkbox: false },\r\n        { name: \"test task 2\", isDone: false, checkbox: false },\r\n        { name: \"test task 3\", isDone: false, checkbox: false },\r\n      ],\r\n    };\r\n  }\r\n\r\n  addHandler = (name) => {\r\n    let item = { name: name, isDone: false, checkbox: false };\r\n\r\n    this.setState((state) => {\r\n      if (state.tasks.filter((task) => task.name == item.name).length > 0)\r\n        alert(\"Task already exists...\");\r\n      else if (item.name != \"\") state.tasks.push(item);\r\n    });\r\n\r\n    this.forceUpdate();\r\n  };\r\n\r\n  doneHandler = (idx) => {\r\n    this.setState((state) => {\r\n      state.tasks[idx].isDone = state.tasks[idx].isDone ? false : true;\r\n    });\r\n\r\n    this.forceUpdate();\r\n  };\r\n\r\n  deleteHandler = (idx) => {\r\n    this.setState((state) => ({\r\n      tasks: state.tasks.filter((item) => item != state.tasks[idx]),\r\n    }));\r\n  };\r\n\r\n  editHandler = (target) => {\r\n    this.setState((state) => {\r\n      state.tasks[target.idx].name = target.input;\r\n      state.tasks[target.idx].isDone = false;\r\n      state.editing = !state.editing;\r\n    });\r\n\r\n    this.forceUpdate();\r\n  };\r\n\r\n  editHelperMethod = (idx) => {\r\n    this.setState((state) => {\r\n      state.editing = !state.editing;\r\n      state.target = { idx: idx, input: state.tasks[idx].name };\r\n    });\r\n\r\n    this.forceUpdate();\r\n  };\r\n\r\n  checkHandler = (idx) => {\r\n    this.setState((state) => {\r\n      state.tasks[idx].checkbox = state.tasks[idx].checkbox ? false : true;\r\n    });\r\n\r\n    this.forceUpdate();\r\n  };\r\n\r\n  positionHandler = (idx, direction) => {\r\n    this.setState((state) => {\r\n      let temp = state.tasks[idx];\r\n\r\n      switch (direction) {\r\n        case \"up\":\r\n          if (idx - 1 < 0) alert(\"Can't move the task\");\r\n          else {\r\n            state.tasks[idx] = state.tasks[idx - 1];\r\n            state.tasks[idx - 1] = temp;\r\n          }\r\n\r\n          break;\r\n\r\n        case \"down\":\r\n          if (idx + 1 == state.tasks.length) alert(\"Can't move the task\");\r\n          else {\r\n            state.tasks[idx] = state.tasks[idx + 1];\r\n            state.tasks[idx + 1] = temp;\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    this.forceUpdate();\r\n  };\r\n\r\n  listDeleteHandler = (mode) => {\r\n    switch (mode) {\r\n      case \"all\":\r\n        this.setState(() => ({ tasks: [] }));\r\n        break;\r\n      case \"checked\":\r\n        this.setState((state) => ({\r\n          tasks: state.tasks.filter((item) => item.checkbox == false),\r\n        }));\r\n        break;\r\n      case \"done\":\r\n        this.setState((state) => ({\r\n          tasks: state.tasks.filter((item) => item.isDone == false),\r\n        }));\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <MainInput\r\n            mainHandler={this.listDeleteHandler}\r\n            inputHandler={this.addHandler}\r\n          />\r\n          {this.state.editing ? (\r\n            <Input\r\n              method={this.editHandler}\r\n              name={\"Edit Task\"}\r\n              argument={this.state.target}\r\n            />\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          <ul>\r\n            {this.state.tasks.map((task, idx) => (\r\n              <React.Fragment key={`task ${idx}`}>\r\n                <li>\r\n                  <span\r\n                    id=\"Text\"\r\n                    style={\r\n                      task.isDone == false\r\n                        ? { color: \"black\", backgroundColor: \"white\" }\r\n                        : { color: \"white\", backgroundColor: \"red\" }\r\n                    }\r\n                  >\r\n                    {task.name}\r\n                  </span>\r\n                </li>\r\n                <div className=\"buttons\">\r\n                  <div className=\"positionButtons\">\r\n                    <button onClick={() => this.positionHandler(idx, \"up\")}>\r\n                      <AiFillCaretUp />\r\n                    </button>\r\n                    <button onClick={() => this.positionHandler(idx, \"down\")}>\r\n                      <AiFillCaretDown />\r\n                    </button>\r\n                  </div>\r\n                  <button onClick={() => this.doneHandler(idx)}>Done</button>\r\n                  <button onClick={() => this.deleteHandler(idx)}>\r\n                    Delete\r\n                  </button>\r\n                  <button onClick={() => this.editHelperMethod(idx)}>\r\n                    Edit\r\n                  </button>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={task.checkbox}\r\n                    onChange={() => this.checkHandler(idx)}\r\n                  />\r\n                </div>\r\n              </React.Fragment>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemList;\r\n","import \"./styles.scss\";\nimport ItemList from \"../ItemList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <ItemList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}