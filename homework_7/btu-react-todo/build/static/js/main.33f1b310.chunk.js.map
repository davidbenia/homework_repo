{"version":3,"sources":["components/Displayer/index.jsx","components/Input/index.jsx","components/App/index.js","index.js"],"names":["Displayer","props","tasks","map","task","idx","Fragment","style","isDone","color","name","className","onClick","handlers","move","done","delete","edit","type","checked","checkbox","onChange","check","Input","changeHandler","event","target","value","setState","input","pressHandler","state","push","doneHandler","forceUpdate","deleteHandler","filter","item","editHandler","checkHandler","positionHandler","direction","temp","listDeleteHandler","mode","id","placeholder","autoComplete","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33f1b310.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nconst Displayer = (props) => {\r\n  const tasks = props.tasks;\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {tasks.map((task, idx) => (\r\n          <React.Fragment key={`task ${idx}`}>\r\n            <li>\r\n              <span\r\n                style={\r\n                  task.isDone == false ? { color: \"black\" } : { color: \"red\" }\r\n                }\r\n              >\r\n                {task.name}\r\n              </span>\r\n            </li>\r\n            <div className=\"buttons\">\r\n              <div className=\"positionButtons\">\r\n                <button onClick={() => props.handlers.move(idx, \"up\")}>\r\n                  ^\r\n                </button>\r\n                <button onClick={() => props.handlers.move(idx, \"down\")}>\r\n                  v\r\n                </button>\r\n              </div>\r\n              <button onClick={() => props.handlers.done(idx)}>Done</button>\r\n              <button onClick={() => props.handlers.delete(idx)}>Delete</button>\r\n              <button onClick={() => props.handlers.edit(idx)}>Edit</button>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={task.checkbox}\r\n                onChange={() => props.handlers.check(idx)}\r\n              />\r\n            </div>\r\n          </React.Fragment>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Displayer;\r\n","import React, { Component } from \"react\";\r\nimport \"./styles.scss\";\r\nimport Displayer from \"../Displayer/index\";\r\n\r\nclass Input extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: \"\",\r\n      tasks: [\r\n        { name: \"test task 1\", isDone: false, checkbox: false },\r\n        { name: \"test task 2\", isDone: false, checkbox: false },\r\n        { name: \"test task 3\", isDone: false, checkbox: false },\r\n      ],\r\n    };\r\n  }\r\n\r\n  changeHandler = (event) => {\r\n    if (event.target.value != \"\")\r\n      this.setState(() => ({ input: event.target.value }));\r\n    else this.setState(() => ({ input: \"\" }));\r\n  };\r\n\r\n  pressHandler = () => {\r\n    this.setState((state) => {\r\n      if (state.input != \"\")\r\n        state.tasks.push({ name: state.input, isDone: false });\r\n    });\r\n\r\n    this.setState(() => ({ input: \"\" }));\r\n  };\r\n\r\n  doneHandler = (idx) => {\r\n    this.setState((state) => {\r\n      state.tasks[idx].isDone = state.tasks[idx].isDone ? false : true;\r\n    });\r\n\r\n    this.forceUpdate();\r\n  };\r\n\r\n  deleteHandler = (idx) => {\r\n    this.setState((state) => ({\r\n      tasks: state.tasks.filter((item) => item != state.tasks[idx]),\r\n    }));\r\n  };\r\n\r\n  editHandler = (idx) => {\r\n    this.setState((state) => {\r\n      if (state.input != \"\") {\r\n        state.tasks[idx].name = state.input;\r\n        state.input = \"\";\r\n      }\r\n    });\r\n\r\n    this.doneHandler(idx);\r\n    this.forceUpdate();\r\n  };\r\n\r\n  checkHandler = (idx) => {\r\n    this.setState((state) => {\r\n      state.tasks[idx].checkbox = state.tasks[idx].checkbox ? false : true;\r\n    });\r\n\r\n    this.forceUpdate();\r\n  };\r\n\r\n  positionHandler = (idx, direction) => {\r\n    this.setState((state) => {\r\n      let temp = state.tasks[idx];\r\n\r\n      switch (direction) {\r\n        case \"up\":\r\n          state.tasks[idx] = state.tasks[idx - 1];\r\n          state.tasks[idx - 1] = temp;\r\n          break;\r\n\r\n        case \"down\":\r\n          state.tasks[idx] = state.tasks[idx + 1];\r\n          state.tasks[idx + 1] = temp;\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      this.forceUpdate();\r\n    });\r\n  };\r\n\r\n  listDeleteHandler = (mode) => {\r\n    switch (mode) {\r\n      case \"all\":\r\n        this.setState(() => ({ tasks: [] }));\r\n        break;\r\n      case \"checked\":\r\n        this.setState((state) => ({\r\n          tasks: state.tasks.filter((item) => item.checkbox == false),\r\n        }));\r\n        break;\r\n      case \"done\":\r\n        this.setState((state) => ({\r\n          tasks: state.tasks.filter((item) => item.isDone == false),\r\n        }));\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <button onClick={() => this.listDeleteHandler(\"all\")}>\r\n          Delete All\r\n        </button>\r\n        <button onClick={() => this.listDeleteHandler(\"checked\")}>\r\n          Delete Checked\r\n        </button>\r\n        <button onClick={() => this.listDeleteHandler(\"done\")}>\r\n          Delete Done\r\n        </button>\r\n\r\n        <div className=\"Input\">\r\n          <textarea\r\n            type=\"textArea\"\r\n            name=\"input\"\r\n            id=\"input\"\r\n            placeholder=\"Add a todo item...\"\r\n            autoComplete=\"Off\"\r\n            onChange={this.changeHandler}\r\n            value={this.state.input}\r\n          />\r\n          <button id=\"addButton\" onClick={this.pressHandler}>\r\n            Add Task\r\n          </button>\r\n        </div>\r\n\r\n        <Displayer\r\n          tasks={this.state.tasks}\r\n          handlers={{\r\n            done: this.doneHandler,\r\n            delete: this.deleteHandler,\r\n            edit: this.editHandler,\r\n            check: this.checkHandler,\r\n            move: this.positionHandler,\r\n          }}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import \"./styles.scss\";\nimport Input from \"../Input/index\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div id=\"Input\">\n        <Input />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}